services:
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=${TZ}
      - WATCHTOWER_SCHEDULE=0 *  *# Checks every hour
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATION_URL=${DISCORD_URL}
      - WATCHTOWER_NOTIFICATION_TEMPLATE=
        {{range .}}{{.Time.Format "02-01-2006 15:04:05"}} ({{.Level}})':' {{.Message}}{{println}}{{end}}
    command: --cleanup --schedule "0 0 8 * * *"
    userns_mode: "host"
    restart: always

  traefik:
    image: traefik:latest
    container_name: traefik
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${LETSENCRYPT_PATH}:/letsencrypt
    restart: unless-stopped

  waf:
    image: owasp/modsecurity-crs:apache
    container_name: waf
    user: root
    environment:
      PARANOIA: ${WAF_PARANOIA:-1}
      ANOMALY_INBOUND: ${WAF_ANOMALY_INBOUND:-10}
      ANOMALY_OUTBOUND: ${WAF_ANOMALY_OUTBOUND:-5}
      PROXY: 1
      REMOTEIP_INT_PROXY: ${WAF_REMOTEIP_INT_PROXY:-"172.30.0.0/16"}
      BACKEND: "http://homepage:3000"
      BACKEND_WS: "ws://homepage:3000"
      ERRORLOG: "/var/log/modsec_error.log"
      LOGLEVEL: "warn"
      PROXY_ERROR_OVERRIDE: "off"
      SERVER_NAME: ${DOMAIN}
      PORT: 8080
      SSL_PORT: 8443
    volumes:
      - /var/log/waf/modsec_error.log:/var/log/modsec_error.log
      - ${WAF_RULES_PATH}/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf:/etc/modsecurity.d/owasp-crs/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf
      - ${WAF_RULES_PATH}/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf:/etc/modsecurity.d/owasp-crs/rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf
    labels:
      - traefik.enable=true
      - traefik.http.routers.waf.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.waf.entrypoints=websecure
      - traefik.http.routers.waf.tls=true
      - traefik.http.routers.waf.tls.certresolver=myresolver
      - traefik.http.services.waf.loadbalancer.server.port=8080
      - traefik.http.middlewares.redirect-https.redirectscheme.scheme=https
      - traefik.http.middlewares.redirect-https.redirectscheme.permanent=true
      - traefik.http.routers.waf-http.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.waf-http.entrypoints=web
      - traefik.http.routers.waf-http.middlewares=redirect-https

  openldap:
    image: osixia/openldap:latest
    container_name: openldap
    environment:
      LDAP_ORGANISATION: ${LDAP_ORGANISATION}
      LDAP_DOMAIN: ${LDAP_DOMAIN}
      LDAP_ADMIN_PASSWORD: ${LDAP_ADMIN_PASSWORD}
      LDAP_TLS: "false"
    volumes:
      - ${OPENLDAP_DATA_PATH}/data:/var/lib/ldap
      - ${OPENLDAP_DATA_PATH}/config:/etc/ldap/slapd.d
    restart: unless-stopped

  ldap-admin:
    image: osixia/phpldapadmin:latest
    container_name: ldap-admin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: openldap
      PHPLDAPADMIN_HTTPS: "false"
    labels:
      - traefik.enable=true
      - traefik.http.routers.ldapadmin.rule=Host(`ldap.${DOMAIN}`)
      - traefik.http.routers.ldapadmin.entrypoints=websecure
      - traefik.http.routers.ldapadmin.tls=true
      - traefik.http.routers.ldapadmin.tls.certresolver=myresolver
    restart: unless-stopped

  authelia:
    image: authelia/authelia:latest
    container_name: authelia
    volumes:
      - ${AUTHELIA_CONFIG_PATH}:/config
    environment:
      - TZ=${TZ}
    labels:
      - traefik.enable=true
      - traefik.http.routers.authelia.rule=Host(`auth.${DOMAIN}`)
      - traefik.http.routers.authelia.entrypoints=websecure
      - traefik.http.routers.authelia.tls=true
      - traefik.http.routers.authelia.tls.certresolver=myresolver
      - traefik.http.routers.authelia.service=authelia
      - traefik.http.services.authelia.loadbalancer.server.port=9091
      - traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/authz/forward-auth
      - traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true
      - traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Email,Remote-Name
    restart: unless-stopped

  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    volumes:
      - ${HOMEPAGE_CONFIG_PATH}:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.homepage.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.homepage.entrypoints=websecure
      - traefik.http.routers.homepage.tls=true
      - traefik.http.routers.homepage.tls.certresolver=myresolver
      - traefik.http.routers.homepage.middlewares=authelia@docker
    restart: unless-stopped

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
